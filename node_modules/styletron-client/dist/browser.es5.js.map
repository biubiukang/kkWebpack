{"version":3,"file":"browser.es5.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-env browser */\n\nconst DECL_REGEX = /.([^:{]+)(:[^{]+)?{([^}]+)}/g;\n\nimport StyletronCore from 'styletron-core';\n\n/**\n * A Styletron class for rendering styles in the browser\n * @extends StyletronCore\n * @packagename styletron-client\n * @example\n * const elements = document.getElementsByClassName('_styletron_hydrate_');\n * const styletron = new StyletronClient(elements);\n */\nclass StyletronClient extends StyletronCore {\n  /**\n   * Create a new StyletronClient instance\n   * @param {NodeList|HTMLCollection|HTMLStyleElement[]} [serverStyles] - List of server style elements\n   * @param {object} [opts] - StyletronCore options\n   */\n  constructor(serverStyles, opts) {\n    super(opts);\n    this.uniqueCount = 0;\n    this.mediaSheets = {};\n    if (serverStyles && serverStyles.length > 0) {\n      for (let i = 0; i < serverStyles.length; i++) {\n        const element = serverStyles[i];\n        if (element.media) {\n          this.mediaSheets[element.media] = element;\n        } else {\n          this.mainSheet = element;\n        }\n        this.hydrateCacheFromCssString(element.textContent, element.media);\n      }\n    } else {\n      const styleSheet = document.createElement('style');\n      document.head.appendChild(styleSheet);\n      this.mainSheet = styleSheet;\n    }\n  }\n\n  /*\n   * Hydrate the cache from a css string and media string\n   * @param {string} css   - The stylesheet css content\n   * @param {string} media - The stylesheet media string\n   */\n  hydrateCacheFromCssString(css, media) {\n    let decl;\n    // {\n    //  1: className,\n    //  2: pseudo,\n    //  3: block,\n    // }\n    while ((decl = DECL_REGEX.exec(css))) {\n      super.incrementVirtualCount();\n      StyletronCore.assignDecl(\n        this.cache,\n        {\n          block: decl[3],\n          pseudo: decl[2],\n          media,\n        },\n        decl[1]\n      );\n    }\n  }\n\n  /**\n   * Inject declaration into the stylesheet and return the unique class name\n   * @return {string}      class name\n   * @example\n   * // <style id=\"styletron\">.a{color:red}</style>\n   * const styletron = new StyletronClient(document.getElementsByClassName('_styletron_hydrate_'));\n   * styletron.injectDeclaration({prop: 'color', val: 'blue'});\n   * // → 'b'\n   * styletron.injectDeclaration({prop: 'color', val: 'red', media: '(min-width: 800px)'});\n   * // → 'c'\n   * styletron.injectDeclaration({prop: 'color', val: 'red'});\n   * // → 'a'\n   */\n  injectDeclaration({prop, val, media, pseudo}) {\n    return this.injectRawDeclaration({block: `${prop}:${val}`, media, pseudo});\n  }\n\n  /**\n   * Inject raw declaration into the stylesheet and return the unique class name\n   * @return {string}      class name\n   * @example\n   * // <style id=\"styletron\">.a{color:red}</style>\n   * const styletron = new StyletronClient(document.getElementsByClassName('_styletron_hydrate_'));\n   * styletron.injectRawDeclaration({block: 'color:blue'});\n   * // → 'b'\n   * styletron.injectRawDeclaration({block: 'color:red', media: '(min-width: 800px)'});\n   * // → 'c'\n   * styletron.injectRawDeclaration({block: 'color:red'});\n   * // → 'a'\n   */\n  injectRawDeclaration(decl) {\n    const oldCount = this.uniqueCount;\n    const className = super.injectRawDeclaration(decl);\n    if (oldCount !== this.uniqueCount) {\n      const rule = declarationToRule(className, decl);\n      let sheet;\n      if (decl.media) {\n        if (!this.mediaSheets[decl.media]) {\n          const mediaSheet = document.createElement('style');\n          mediaSheet.media = decl.media;\n          this.mediaSheets[decl.media] = mediaSheet;\n          this.mainSheet.parentNode.appendChild(mediaSheet);\n        }\n        sheet = this.mediaSheets[decl.media].sheet;\n      } else {\n        sheet = this.mainSheet.sheet;\n      }\n      sheet.insertRule(rule, sheet.cssRules.length);\n    }\n    return className;\n  }\n}\n\nexport default StyletronClient;\n\n/*\n * Injection helpers\n */\n\nfunction declarationToRule(className, {block, pseudo}) {\n  let selector = `.${className}`;\n  if (pseudo) {\n    selector += pseudo;\n  }\n  return `${selector}{${block}}`;\n}\n"],"names":["DECL_REGEX","StyletronClient","serverStyles","opts","uniqueCount","mediaSheets","length","i","element","media","mainSheet","hydrateCacheFromCssString","textContent","styleSheet","document","createElement","head","appendChild","css","decl","exec","incrementVirtualCount","assignDecl","cache","injectDeclaration","prop","val","pseudo","injectRawDeclaration","oldCount","className","rule","declarationToRule","sheet","mediaSheet","parentNode","insertRule","cssRules","StyletronCore","block","selector"],"mappings":";;;;;;;;;AAEA,IAAMA,aAAa,8BAAnB;AAEA,AAEA;;;;;;;;;IAQMC;;;;;;;;;;2BAMQC,YAAZ,EAA0BC,IAA1B,EAAgC;;;sCACxBA,IAAN;UACKC,WAAL,GAAmB,CAAnB;UACKC,WAAL,GAAmB,EAAnB;;QACIH,gBAAgBA,aAAaI,MAAb,GAAsB,CAA1C,EAA6C;WACtC,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,aAAaI,MAAjC,EAAyCC,GAAzC,EAA8C;YACtCC,UAAUN,aAAaK,CAAb,CAAhB;;YACIC,QAAQC,KAAZ,EAAmB;gBACZJ,WAAL,CAAiBG,QAAQC,KAAzB,IAAkCD,OAAlC;SADF,MAEO;gBACAE,SAAL,GAAiBF,OAAjB;;;cAEGG,yBAAL,CAA+BH,QAAQI,WAAvC,EAAoDJ,QAAQC,KAA5D;;KARJ,MAUO;UACCI,aAAaC,SAASC,aAAT,CAAuB,OAAvB,CAAnB;eACSC,IAAT,CAAcC,WAAd,CAA0BJ,UAA1B;YACKH,SAAL,GAAiBG,UAAjB;;;;;;;;;;;;;;SASJF,+DAA0BO,KAAKT,OAAO;QAChCU,IAAJ,CADoC;;;;;;WAO5BA,OAAOnB,WAAWoB,IAAX,CAAgBF,GAAhB,CAAf,EAAsC;+BAC9BG,qBAAN;;oBACcC,UAAd,CACE,KAAKC,KADP,EAEE;eACSJ,KAAK,CAAL,CADT;gBAEUA,KAAK,CAAL,CAFV;;OAFF,EAOEA,KAAK,CAAL,CAPF;;;;;;;;;;;;;;;;;;SAyBJK,qDAA8C;QAA3BC,IAA2B,QAA3BA,IAA2B;QAArBC,GAAqB,QAArBA,GAAqB;QAAhBjB,KAAgB,QAAhBA,KAAgB;QAATkB,MAAS,QAATA,MAAS;WACrC,KAAKC,oBAAL,CAA0B;aAAWH,IAAV,SAAkBC,GAAnB;kBAAA;;KAA1B,CAAP;;;;;;;;;;;;;;;;;SAgBFE,qDAAqBT,MAAM;QACnBU,WAAW,KAAKzB,WAAtB;;QACM0B,YAAY,yBAAMF,oBAAN,YAA2BT,IAA3B,CAAlB;;QACIU,aAAa,KAAKzB,WAAtB,EAAmC;UAC3B2B,OAAOC,kBAAkBF,SAAlB,EAA6BX,IAA7B,CAAb;UACIc,KAAJ;;UACId,KAAKV,KAAT,EAAgB;YACV,CAAC,KAAKJ,WAAL,CAAiBc,KAAKV,KAAtB,CAAL,EAAmC;cAC3ByB,aAAapB,SAASC,aAAT,CAAuB,OAAvB,CAAnB;qBACWN,KAAX,GAAmBU,KAAKV,KAAxB;eACKJ,WAAL,CAAiBc,KAAKV,KAAtB,IAA+ByB,UAA/B;eACKxB,SAAL,CAAeyB,UAAf,CAA0BlB,WAA1B,CAAsCiB,UAAtC;;;gBAEM,KAAK7B,WAAL,CAAiBc,KAAKV,KAAtB,EAA6BwB,KAArC;OAPF,MAQO;gBACG,KAAKvB,SAAL,CAAeuB,KAAvB;;;YAEIG,UAAN,CAAiBL,IAAjB,EAAuBE,MAAMI,QAAN,CAAe/B,MAAtC;;;WAEKwB,SAAP;;;;EAtG0BQ;;AA0G9B,AAEA;;;;AAIA,SAASN,iBAAT,CAA2BF,SAA3B,SAAuD;MAAhBS,KAAgB,SAAhBA,KAAgB;MAATZ,MAAS,SAATA,MAAS;MACjDa,iBAAeV,SAAnB;;MACIH,MAAJ,EAAY;gBACEA,MAAZ;;;SAEQa,QAAV,SAAsBD,KAAtB;;;;;"}